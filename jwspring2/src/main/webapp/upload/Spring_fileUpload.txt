
<파일 업로드>
* pom.xml -> cos, commons-fileupload
* web.xml -> CommonsMultipartResolver

1. 서버에 저장
MultipartFile-저장 메서드(transferTo(file)))
1개 - 
여러개




* pom.xml

<!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
<dependency>
    <groupId>commons-fileupload</groupId>
    <artifactId>commons-fileupload</artifactId>
    <version>1.4</version>
</dependency>



* root-context.xml

	<!-- 파일 업로드 설정, 최대사이즈 = 10MB -->
	<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10000000" />	
	</bean>




* FileController
package org.khit.myapp.controller;

import java.io.File;
import java.io.IOException;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.multipart.MultipartFile;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
public class FileController {
	
	@GetMapping("/file/upload")
	public String uploadForm() {
		return "/file/uploadform";
	}
	
	@PostMapping("/file/upload")
	// MultipartFile class import => 여러 함수 사용 가능
	public String upload(MultipartFile filename) throws IllegalStateException, IOException {
		long fileSize = filename.getSize();
		String fileType = filename.getContentType();
//		log.info(originFilename);
		log.info(fileSize + "B");
		log.info(fileType);
		
		// 서버에 저장
		String filepath = "C:\\springwork\\jwspring2\\src\\main\\webapp\\upload";
		String savedFilename = filename.getOriginalFilename();
		
		File file = new File(filepath + "\\" + savedFilename);
		filename.transferTo(file);  // 서버폴더에 저장
		
		return "/file/uploadform";
	}
}







2. DB연동
















